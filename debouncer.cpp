#include "debouncer.hpp"

/*
 ******************************************************************************
 * DEFINES
 ******************************************************************************
 */

/*
 ******************************************************************************
 * EXTERNS
 ******************************************************************************
 */

/*
 ******************************************************************************
 * GLOBAL VARIABLES
 ******************************************************************************
 */

/*
 *******************************************************************************
 *******************************************************************************
 * LOCAL FUNCTIONS
 *******************************************************************************
 *******************************************************************************
 */


/*
 *******************************************************************************
 * EXPORTED FUNCTIONS
 *******************************************************************************
 */

/**
 *
 */
Debouncer::Debouncer(int threshold, int initial_state, unsigned int (*read_pad)(void)) :
threshold(threshold),
state(initial_state),
read_pad(read_pad)
{
  if (initial_state > 0)
    prev = 1;
  else
    prev = 0;
  return;
}

/**
 *
 */
int Debouncer::update(void) {
  if (1 == read_pad())
    state++;
  else
    state--;

  if (state > threshold) {
    state = threshold;
    prev = 1;
  }
  else if (state < 0) {
    state = 0;
    prev = 0;
  }

  return prev;
}

